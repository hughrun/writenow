.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "" "1" "" "press q to exit" "writenow Jul 2020"
.hy
.SH NAME
.PP
writenow - a command line utility to make static-site publishing easier.
.SH SYNOPSIS
.PP
writenow is a utility to help you to create frontmatter for static site
pages, test your posts locally, and deploy them to a remote server.
You will need to also have rsync and ssh installed, and ssh will need to
be configured with an \f[B]id_rsa\f[R] key if you want to publish files
to a remote location.
.PP
Commands are written in the format:
.PP
\f[B]writenow command [ -flag ]\f[R]
.PP
You can use flags separately: \f[B]-b - k -o\f[R] Or you can use them
together: \f[B]-bko\f[R]
.SH OPTIONS
.PP
\f[B]writenow backup\f[R]
.PP
Creates a gzip archive of your specified INPUT directory in a
\f[I]backup\f[R] subdirectory where you installed writenow.
If you use the \f[B]-o\f[R] flag it will back up the OUTPUT directory
instead.
.PP
\f[B]writenow setup\f[R] or \f[B]writenow config\f[R]
.PP
Guides you through setting up your writenow settings like tag and author
defaults, Unsplash API key, and remote server details.
You can also use this command to change your settings later: simply hit
\f[B][Enter]\f[R] to leave an existing setting unchanged.
The config is saved in the directory where you saved writenow, with the
filename \f[B]writenow.env\f[R]
.PP
For file paths you must use the full path or use \f[B]\[ti]\f[R] to
indicate the current user\[cq]s path.
e.g.\ for user Erika publishing with Eleventy, the following paths are
equivalent and both valid:
.PP
**\[ti]/eleventy/_output**
.PP
**/Users/erika/eleventy/_output/**
.PP
\f[I]Do not use relative paths\f[R].
e.g.\ This will not work if you run a writenow command from a directory
different to where you installed writenow:
.PP
\f[B]_output/\f[R]
.PP
Local directories will automatically be given a trailing slash, and
remote directories will automatically have any trailing slashes removed.
This ensures that rsync behaviour is as expected when you run
\f[B]writenow publish\f[R] and \f[B]writenow backup\f[R].
.PP
\f[B]Unsplash API key\f[R] The `Client ID' from your Unsplash account.
If you don\[cq]t have one, leave it blank and writenow won\[cq]t attempt
to set an image for you.
.PP
\f[B]Where do you want your drafts to be saved? (INPUT)\f[R] This could
be a drafts folder, but generally will be the directory that is
processed by your static site generator.
i.e.\ this is where your Markdown files are saved.
.PP
\f[B]Command for processing drafts\f[R] This is generally the command on
your static site generator that processes markdown files into HTML.
For example \f[B]eleventy \[en]quiet\f[R] or \f[B]jekyll build\f[R].
.PP
\f[B]Output path (OUTPUT)\f[R] The directory where your processed files
go.
i.e.\ there should be an \f[B]index.html\f[R] file in this directory
that is your homepage.
.PP
\f[B]Remote path\f[R] The path on your remote server that your webserver
serves files from.
On a Linux server it will usually be /var/www/html.
writenow will remove any trailing slashes so that rsync doesn\[cq]t do
anything surprising.
.PP
\f[B]writenow help\f[R]
.PP
Displays the help page.
.PP
\f[B]writenow process\f[R]
.PP
Processes files in your INPUT_DIRECTORY using your static site
generator\[cq]s command (PROCESS_COMMAND).
You can run `writenow process' from anywhere.
.PP
\f[B]writenow publish\f[R]
.PP
Syncs your local output directory with your remote directory.
i.e.\ this `publishes' any posts that you have generated on your local
machine but not yet deployed to your server, and updates/transfers any
other files that have been changed or added like images, RSS files or
CSS.
.PP
By default this will remove any files and directories from the remote
server if they are no longer in the local output directory (using the
rsync \[en]del flag).
You can use the \f[B]-k\f[R] flag to keep these files on the server
instead.
.PP
\f[B]writenow test\f[R]
.PP
Spins up a local webserver so you can see what your new post will look
like - before you publish it.
This will open \f[B]index.html\f[R] from your OUTPUT directory in your
default browser.
Press \f[B]Ctrl + c\f[R] to kill it when you\[cq]ve finished testing, or
you could just leave it running and open a new Terminal window to keep
using more commands.
.PP
\f[B]writenow write\f[R]
.PP
Launches the frontmatter creator.
This will step you through each key/value for your frontmatter, then
open it in the default application for markdown (\f[B].md\f[R]) files
(probably your default text editor).
.PP
At this stage you can only use the defaults (title, subtitle, author,
tags, description) but in a future release you should be able to set up
your own template.
.PP
\f[B]FLAGS\f[R]
.PP
Flags change the default behavour of a command.
You can use more than one at the same time.
.PP
\f[B]-b\f[R]
.PP
Using the \f[I]backup\f[R] \f[B]-b\f[R] flag after \f[B]writenow
publish\f[R] will run a backup of your INPUT directory before
publishing.
.PP
\f[B]-i\f[R]
.PP
Using the \f[I]image\f[R] \f[B]-i\f[R] flag after \f[B]writenow
write\f[R] will skip image generation.
You should only need to use this flag if you have assigned an API key
with \f[B]writenow config\f[R] but do not want to use it for a
particular post.
If you have not set an API key (CLIENT_ID) the \f[B]-i\f[R] flag is
assumed.
.PP
\f[B]-k\f[R]
.PP
Using the \f[I]keep\f[R] \f[B]-k\f[R] flag after \f[B]writenow
publish\f[R] will retain any `orphaned' directories and files that are
on your remote server but not your local output directory, instead of
deleting them.
.PP
\f[B]-o\f[R]
.PP
Using the \f[I]output\f[R] or \f[B]-o\f[R] flag after \f[B]writenow
backup\f[R] or with \f[B]writenow publish -b\f[R] will back up the
OUTPUT directory instead of the INPUT directory.
.SH EXAMPLES
.PP
Create a new markdown template without an image
.PP
\f[B]writenow write -i\f[R]
.PP
Publish a new file but run a backup of the markdown files in the INPUT
directory first
.PP
\f[B]writenow publish -b\f[R]
.PP
You can combine flags:
.PP
Publish a new file but run a backup of the html, css etc in the OUTPUT
directory first
.PP
\f[B]writenow publish -bo\f[R]
.PP
Back up the OUTPUT directory, publish any changes, and retain all files
on server
.PP
\f[B]writenow publish -bko\f[R]
